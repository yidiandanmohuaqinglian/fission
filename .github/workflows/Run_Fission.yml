name: 执行 CloudflareCDN 裂变脚本

on:
  # schedule:
  #   - cron: '0 0 * * 3'
  workflow_dispatch:

jobs:
  Run_Fission:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run Fission script
      run: python Fission.py

    - name: Remove duplicates and empty lines
      run: |
        awk '!seen[$0]++' Fission_domain.txt | sed '/^$/d' | sort > temp_domain.txt && mv temp_domain.txt Fission_domain.txt
        awk '!seen[$0]++' Fission_ip.txt | sed '/^$/d' | sort > temp_ip.txt

    - name: Install mmdb-bin
      run: sudo apt-get install -y mmdb-bin wget

    - name: Download GeoLite2-ASN.mmdb
      run: |
        wget https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb -O GeoLite2-ASN.mmdb
        wget https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-Country.mmdb -O GeoLite2-Country.mmdb

    - name: Classify IP addresses
      run: |
        > Fission_ip.txt
        > Fission_cf.txt
        while IFS= read -r line; do
          ip=$(echo "$line" | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b")
          if [ -n "$ip" ]; then
            ASN=$(mmdblookup --file GeoLite2-ASN.mmdb --ip "$ip" autonomous_system_number | grep -oP '\d+' || true)
            if [ -n "$ASN" ]; then
              if echo "$ASN" | grep -qE '13335|209242'; then
                echo "$line" >> Fission_cf.txt
              else
                echo "$line" >> Fission_ip.txt
              fi
            else
              echo "ASN lookup failed for IP: $ip" >&2
            fi
          fi
        done < temp_ip.txt

    - name: ip2cc
      run: |
          > Fission_ip2cc.txt
          while IFS= read -r line
          do
            ip=$(echo "$line" | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b")
            country_code=$(mmdblookup --file GeoLite2-Country.mmdb --ip "$ip" country iso_code | awk -F'"' '{print $2}' | tr -d '\n')
            echo "$line#$country_code" >> Fission_ip2cc.txt
          done < Fission_ip.txt

    - name: Commit and Push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Fission_ip.txt Fission_cf.txt Fission_domain.txt Fission_ip2cc.txt
        git commit -m "Processed files on $(date "+%Y/%m/%d %H:%M:%S")"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}.git
        git push
